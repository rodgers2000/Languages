library(Quantmod)
install.packages("Quantmod")
library(Quantmod)
install.packages(quantmod)
install.packages("quantmod")
library(quantmod)
library(R6)
files = list.files("data")
Data = list()
library(readr)
Data = list()
for (file in files) {
temp_df = read_csv(file)
Data[file] = temp_df
}
file
temp_df = read_csv(file)
for (file in files) {
temp_df = read_csv(paste0("data/", file))
Data[file] = temp_df
}
str(Data)
Data$`^DJI.csv`
temp_df = read_csv(paste0("data/", file))
temp_df
Data[file] = temp_df
Data = list()
index = 1
for (file in files) {
temp_df = read_csv(paste0("data/", file))
Data[index] = temp_df
index = index + 1
}
Data = lapply(files, read_csv)
Data = lapply(paste0("data/", files, read_csv)
Data = lapply(paste0("data/", files, read_csv))
Data = lapply(paste0("data/", files), read_csv)
Data
names(Data) = files
for (df in Data) {
head(df)
}
head(df)
for (df in Data) {
df$Change = df$`Adj Close` - lag(df$`Adj Close`, 1)
}
for (index in names(Data)) {
Data[index]$Change = df$`Adj Close` - lag(df$`Adj Close`, 1)
}
for (index in names(Data)) {
Data[index]$Change = Data[index]$`Adj Close` - lag(Data[index]$`Adj Close`, 1)
}
head()
for (index in names(Data)) {
Data[index]$Change = Data[index]$`Adj Close` - lag(Data[index]$`Adj Close`, 1)
}
Data[index]
Data[index]$`Adj Close`
Data[index]
names(Data) = files
names(Data) = 1:length(Data)
names(Data)
Data[1]
for (index in 1:length(Data)) {
Data[index]$Change = 1
}
Data[index]$Change
Data[index]
Data[index]$`7`
Data[index][index] = 1
Data[index][index]
the_mjr = data.frame()
length(Data)
library(readr)
files = list.files("data")
Data = lapply(paste0("data/", files), read_csv)
names(Data) = 1:length(Data)
the_mjr = data.frame()
Data$`1`
the_mjr = Data$`1`
library(readr)
files = list.files("data")
Data = lapply(paste0("data/", files), read_csv)
names(Data) = 1:length(Data)
str(Data)
names(Data) = files
str(Data)
library(readr)
files = list.files("data")
Data = lapply(paste0("data/", files), read_csv)
names(Data) = 1:length(Data)
# for each dataset - 1
# create name vector
# find merge by Date!!!
for (i in 1:length(Data)) {
ticker = rep(files[i], nrow(Data[i]))
mjr = Data[i]
mjr$ticker = ticker
Data[i] = mjr
}
debugSource('~/Documents/other/languages/r/rstudio/theory/GodMan/LeftRightUpDown/Data.R')
nrow(Data[i])
Data[i]
nrow(Data[i])
Data[i]
nrow(Data[i][i])
Data[i][i]
Data[i]
summary(Data[i])
nrow(data.frame(Data[i]))
ticker = rep(files[i], nrow(data.frame(Data[i])))
mjr = Data[i]
mjr$ticker = ticker
Data[i] = mjr
mjr
temp_df = data.frame(Data[i])
ticker = rep(files[i], nrow(temp_df))
library(readr)
files = list.files("data")
Data = lapply(paste0("data/", files), read_csv)
names(Data) = 1:length(Data)
# for each dataset - 1
# create name vector
# find merge by Date!!!
for (i in 1:length(Data)) {
temp_df = data.frame(Data[i])
ticker = rep(files[i], nrow(temp_df))
temp_df$ticker = ticker
Data[i] = temp_df
}
debugSource('~/Documents/other/languages/r/rstudio/theory/GodMan/LeftRightUpDown/Data.R')
temp_df
Data[i]
summary(Data[i])
library(readr)
files = list.files("data")
Data = lapply(paste0("data/", files), read_csv)
names(Data) = 1:length(Data)
# for each dataset - 1
# create name vector
# find merge by Date!!!
NewData = list()
for (i in 1:length(Data)) {
temp_df = data.frame(Data[i])
ticker = rep(files[i], nrow(temp_df))
temp_df$ticker = ticker
NewData[i] = temp_df
}
library(readr)
files = list.files("data")
Data = lapply(paste0("data/", files), read_csv)
names(Data) = 1:length(Data)
# for each dataset - 1
# create name vector
# find merge by Date!!!
NewData = list()
for (i in 1:length(Data)) {
temp_df = data.frame(Data[i])
ticker = rep(files[i], nrow(temp_df))
temp_df$ticker = ticker
NewData[i] = temp_df
}
temp_df = data.frame(Data[i])
ticker = rep(files[i], nrow(temp_df))
temp_df$ticker = ticker
NewData[i] = temp_df
NewData
debugSource('~/Documents/other/languages/r/rstudio/theory/GodMan/LeftRightUpDown/Data.R')
str(temp_df)
NewData[[i]] = temp_df
library(readr)
files = list.files("data")
Data = lapply(paste0("data/", files), read_csv)
names(Data) = 1:length(Data)
# for each dataset - 1
# create name vector
# find merge by Date!!!
for (i in 1:length(Data)) {
temp_df = Data[[i]]
ticker = rep(files[i], nrow(temp_df))
temp_df$ticker = ticker
Data[[i]] = temp_df
}
names(Data[[1]])
str(Data)
for (i in 1:length(Data)) {
temp_df = Data[[i]]
ticker = rep(files[i], nrow(temp_df))
temp_df$ticker = ticker
Data[[i]] = temp_df
}
NewData = data.frame()
for (i in 1:length(Data)) {
temp_df = Data[i]
NewData = cbind(Newdata, temp_df)
}
NewData = data.frame()
for (i in 1:length(Data)) {
temp_df = Data[i]
NewData = cbind(Newdata, temp_df)
}
for (i in 1:length(Data)) {
temp_df = Data[i]
NewData = cbind(NewData, temp_df)
}
NewData = Data[[1]]
for (i in 2:length(Data)) {
temp_df = Data[i]
NewData = cbind(NewData, temp_df)
}
NewData = data.frame()
for (i in 1:length(Data)) {
temp_df = Data[i]
NewData = rbind(NewData, temp_df)
}
NewData = Data[[1]]
for (i in 2:length(Data)) {
temp_df = Data[i]
NewData = rbind(NewData, temp_df)
}
debugSource('~/Documents/other/languages/r/rstudio/theory/GodMan/LeftRightUpDown/Data.R')
NewData = data.frame()
for (i in 1:length(Data)) {
temp_df = Data[[i]]
NewData = rbind(NewData, temp_df)
}
str(NewData)
library(readr)
files = list.files("data")
Data = lapply(paste0("data/", files), read_csv)
names(Data) = 1:length(Data)
files = stringr::str_sub(files, 2, 5)
files
library(readr)
files = list.files("data")
Data = lapply(paste0("data/", files), read_csv)
names(Data) = 1:length(Data)
files = stringr::str_sub(files, 2, 5)
for (i in 1:length(Data)) {
temp_df = Data[[i]]
ticker = rep(files[i], nrow(temp_df))
temp_df$ticker = ticker
Data[[i]] = temp_df
}
# QUEEN LOLA
# now we have labels for the points!
NewData = data.frame()
for (i in 1:length(Data)) {
temp_df = Data[[i]]
NewData = rbind(NewData, temp_df)
}
str(NewData)
